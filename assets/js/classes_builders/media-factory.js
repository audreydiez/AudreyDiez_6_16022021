import{VideoFactory}from"../classes/video-factory";import{ImageFactory}from"../classes/image-factory";export class MediaFactory{constructor(e){this.medias=[],e.media.forEach((e=>{"image"===Object.keys(e)[2].toString()?(e.name=this.renameMedia(e.image),e.url=e.image,this.medias.push(new ImageFactory(e))):"video"===Object.keys(e)[2].toString()&&(e.name=this.renameMedia(e.video),e.url=e.video,this.medias.push(new VideoFactory(e)))}))}GetMediasByPhotographer(e){const t=[];return this.medias.forEach((a=>{a.photographerId.toString()===e&&t.push(a)})),t}renameMedia(e){return(e=(e=e.substring(e.indexOf("_")+1)).split(".")[0]).replace(/_/g," ")}static sortMedias(e,t){let a=[];return"popularity"===t?a=[...e].sort(((e,t)=>t.likes-e.likes)):"date"===t?a=[...e].sort(((e,t)=>{let a=new Date(e.date.replace(/(\d{2})-(\d{2})-(\d{4})/,"$2/$1/$3"));return new Date(t.date.replace(/(\d{2})-(\d{2})-(\d{4})/,"$2/$1/$3"))-a})):"title"===t&&(a=[...e].sort(((e,t)=>e.name.localeCompare(t.name)))),a}}